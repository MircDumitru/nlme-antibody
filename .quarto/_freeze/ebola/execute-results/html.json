{
  "hash": "855c26d260e2fd164b60251745f932ce",
  "result": {
    "engine": "knitr",
    "markdown": "# NLME models for antibody concentration decay {#sec-nlme-ab}\n\n::: content-hidden\n$$\n\\newcommand{\\ab}{\\bm{a}}\n\\newcommand{\\Ab}{\\bm{A}}\n\\newcommand{\\arv}{\\mathrm{a}}\n\\newcommand{\\arvb}{\\mathbf{a}}\n\\newcommand{\\Arvb}{\\mathbf{A}}\n\n\\newcommand{\\bb}{\\bm{b}}\n\\newcommand{\\Bb}{\\bm{B}}\n\\newcommand{\\brv}{\\mathrm{b}}\n\\newcommand{\\brvb}{\\mathbf{b}}\n\\newcommand{\\Brvb}{\\mathbf{B}}\n\n\\newcommand{\\eb}{\\bm{e}}\n\\newcommand{\\Eb}{\\bm{E}}\n\\newcommand{\\erv}{\\mathrm{e}}\n\\newcommand{\\ervh}{\\widehat{\\mathrm{e}}}\n\\newcommand{\\ervb}{\\mathbf{e}}\n\\newcommand{\\Ervb}{\\mathbf{E}}\n\n\\newcommand{\\sb}{\\bm{s}}\n\\newcommand{\\Sb}{\\bm{S}}\n\\newcommand{\\srv}{\\mathrm{s}}\n\\newcommand{\\srvh}{\\widehat{\\mathrm{s}}}\n\\newcommand{\\srvb}{\\mathbf{s}}\n\\newcommand{\\Srv}{\\mathrm{S}}\n\\newcommand{\\Srvb}{\\mathbf{S}}\n\n\\newcommand{\\tb}{\\bm{t}}\n\\newcommand{\\Tb}{\\bm{T}}\n\\newcommand{\\trv}{\\mathrm{t}}\n\\newcommand{\\trvb}{\\mathbf{t}}\n\\newcommand{\\Trvb}{\\mathbf{T}}\n\n\\newcommand{\\ub}{\\bm{u}}\n\\newcommand{\\Ub}{\\bm{U}}\n\\newcommand{\\urv}{\\mathrm{u}}\n\\newcommand{\\urvb}{\\mathbf{u}}\n\\newcommand{\\Urvb}{\\mathbf{U}}\n\n\\newcommand{\\yb}{\\bm{y}}\n\\newcommand{\\Yb}{\\bm{Y}}\n\\newcommand{\\yrv}{\\mathrm{y}}\n\\newcommand{\\yrvh}{\\widehat{\\mathrm{y}}}\n\\newcommand{\\yrvb}{\\mathbf{y}}\n\\newcommand{\\Yrvb}{\\mathbf{Y}}\n\n\\newcommand{\\xb}{\\bm{x}}\n\\newcommand{\\Xb}{\\bm{X}}\n\\newcommand{\\xrv}{\\mathrm{x}}\n\\newcommand{\\xrvb}{\\mathbf{x}}\n\\newcommand{\\Xrvb}{\\mathbf{X}}\n\n\\newcommand{\\zb}{\\bm{z}}\n\\newcommand{\\Zb}{\\bm{Z}}\n\\newcommand{\\zrv}{\\mathrm{z}}\n\\newcommand{\\zrvb}{\\mathbf{z}}\n\\newcommand{\\Zrvb}{\\mathbf{Z}}\n\n\\newcommand{\\Ib}{\\bm{I}}\n\n\\newcommand{\\oneb}{\\bm{1}}\n\\newcommand{\\zerob}{\\bm{0}}\n\n\\newcommand{\\sigmah}{\\widehat{\\sigma}}\n\\newcommand{\\epsilonb}{\\bm{\\epsilon}}\n\\newcommand{\\epsilonh}{\\widehat{\\epsilon}}\n\\newcommand{\\tauh}{\\widehat{\\tau}}\n\\newcommand{\\taus}{\\tau^{*}}\n\\newcommand{\\taush}{\\widehat{\\tau}^{*}}\n\\newcommand{\\alphah}{\\widehat{\\alpha}}\n\\newcommand{\\alphas}{\\alpha^{*}}\n\\newcommand{\\alphash}{\\widehat{\\alpha}^{*}}\n\\newcommand{\\nuh}{\\widehat{\\nu}}\n\\newcommand{\\betab}{\\bm{\\beta}}\n\\newcommand{\\psib}{\\bm{\\psi}}\n\\newcommand{\\xib}{\\bm{\\xi}}\n\\newcommand{\\thetab}{\\bm{\\theta}}\n\\newcommand{\\betah}{\\widehat{\\beta}}\n\\newcommand{\\betas}{\\beta^{*}}\n\\newcommand{\\betabh}{\\widehat{\\betab}}\n\\newcommand{\\betabsh}{\\widehat{\\betab}^{*}}\n\\newcommand{\\betabst}{\\betab^{*T}}\n\\newcommand{\\betabht}{\\widehat{\\betab}^{T}}\n\n\\def\\PD#1{\\mathbb{P} \\left( #1 \\right)}\n\\def\\cond{\\,\\middle\\vert\\,}\n\\def\\indep{\\perp \\!\\!\\!\\! \\perp}\n\\def\\Abs#1{\\left\\lvert\\ #1 \\right\\rvert}\n\\def\\EV#1{\\mathbb{E}\\left[#1\\right]}\n\\def\\EVp#1#2{\\mathbb{E}^{#1}\\left[#2\\right]}\n\\def\\ExV#1#2{\\mathbb{E}_{#1}\\left[#2\\right]}\n\\def\\ExVa#1#2#3{\\mathbb{E}_{#1}^{#2}\\left[#3\\right]}\n\\def\\Var#1{\\mathbb{V}\\left[#1\\right]}\n\\def\\Varh#1{\\widehat{\\mathbb{V}}\\left[#1\\right]}\n\\def\\VarRV#1#2{\\mathbb{V}_{#1}\\left[#2\\right]}\n\\def\\VarhRV#1#2{\\widehat{\\mathbb{V}}_{#1}\\left[#2\\right]}\n\\def\\VarRVh#1#2{\\widehat{\\mathbb{V}}_{#1}\\left[#2\\right]}\n\\def\\Cov#1{\\text{Cov}\\left[#1\\right]}\n\\def\\CovRV#1#2{\\text{Cov}_{#1}\\left[#2\\right]}\n\\def\\d#1{\\text{d}#1}\n\n\\def\\bias#1{\\text{bias}\\left[#1\\right]}\n\\def\\MSE#1{\\text{MSE}\\left(#1\\right)}\n\\def\\MSEh#1{\\widehat{\\text{MSE}}\\left(#1\\right)}\n\n\n\\def\\transpose#1{#1^{\\mathrm{T}}}\n\\def\\Normal#1{\\mathcal N \\left( #1 \\right)}\n\n\\usepackage{amsmath} \n\\usepackage{amsthm} \n\\usepackage{units}\n\\usepackage{bm}\n\\usepackage{bbm}\n\\usepackage{enumitem}\n\\usepackage{mathabx}\n\n\n$$\n:::\n\n\n::: {.cell}\n\n:::\n\n\n## Introduction\n\n### Prerequisites\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)  # tidyverse \nlibrary(nlme)       # non-linear mixed effect models\nlibrary(saemix)     # nlme package for saemix objects;\n```\n:::\n\n\n## Exploratory data analysis\n\nReading the csv file and look at its head:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\n# read the csv file\ntb <- read_csv(\"data/data_ebola_ab.csv\")\ntb |>\n  head() |>\n  knitr::kable(align = \"ccccccc\")\n#> Warning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\n#> Use 'xfun::attr2()' instead.\n#> See help(\"Deprecated\")\n#> Warning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\n#> Use 'xfun::attr2()' instead.\n#> See help(\"Deprecated\")\n```\n\n::: {.cell-output-display}\n\n\n| ID  | time |  sex   |   age    |   bmi    |   country   | Abelisa  |\n|:---:|:----:|:------:|:--------:|:--------:|:-----------:|:--------:|\n| ID1 |  0   | Female | 35.49993 | 20.69408 | West Africa | 1.785124 |\n| ID1 |  7   | Female | 35.49993 | 20.69408 | West Africa | 4.434470 |\n| ID1 |  15  | Female | 35.49993 | 20.69408 | West Africa | 4.124822 |\n| ID1 |  30  | Female | 35.49993 | 20.69408 | West Africa | 4.050954 |\n| ID1 |  90  | Female | 35.49993 | 20.69408 | West Africa | 3.382073 |\n| ID1 | 180  | Female | 35.49993 | 20.69408 | West Africa | 2.935390 |\n\n\n:::\n:::\n\n\nCheck the data types (and transform \"character\" into \"factors\" if any) and check for missing values.\n\n@tbl-var-types shows the corresponding data types for the variables in the data set. Three variables (`ID`, `sex`, `country`) are categorical variables and will be re-coded as factors.\n\n\n::: {#tbl-var-types .cell layout-align=\"center\" tbl-cap='The variable types in the data set'}\n\n```{.r .cell-code  code-fold=\"true\"}\n# checking the var types\ntb |>\n  summarise(across(everything(), typeof)) |>\n  knitr::kable(align = \"ccccccc\")\n```\n\n::: {.cell-output-display}\n\n\n|    ID     |  time  |    sex    |  age   |  bmi   |  country  | Abelisa |\n|:---------:|:------:|:---------:|:------:|:------:|:---------:|:-------:|\n| character | double | character | double | double | character | double  |\n\n\n:::\n:::\n\n\n@tbl-missing-vals shows the number of missing values for each variable in the data set. There are no missing values.\n\n\n::: {#tbl-missing-vals .cell layout-align=\"center\" tbl-cap='The number of missing values in each variable'}\n\n```{.r .cell-code  code-fold=\"true\"}\n# checking for possible missing vals\ntb |>\n  summarise(across(everything(), \\(x) sum(is.na(x)))) |>\n  knitr::kable(align = \"ccccccc\")\n```\n\n::: {.cell-output-display}\n\n\n| ID | time | sex | age | bmi | country | Abelisa |\n|:--:|:----:|:---:|:---:|:---:|:-------:|:-------:|\n| 0  |  0   |  0  |  0  |  0  |    0    |    0    |\n\n\n:::\n:::\n\n\nTwo pre-processing operations should be done:\n\n-   cleaning the names (not essential but for consistency we adhere to the tidy design principles),\n-   transforming the \"character\" variables into \"factors\" (when important, the ordering of factors should be accounted for; here the `sex` and `country` variables are not ordered factors; the `ID` variable might be ordered for visualizations reasons if necessary).\n\nThe following chunk is doing the pre-processing as mentioned above and checks the correctness of the pre-processing.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb <- tb |>\n  # clean the names\n  janitor::clean_names() |>\n  # transform chr into factors\n  mutate(across(where(is.character), fct))\n\n# check the transformed tibble\ntb |>\n  glimpse()\n#> Rows: 360\n#> Columns: 7\n#> $ id      <fct> ID1, ID1, ID1, ID1, ID1, ID1, ID1, ID1, ID2, ID2, ID2, ID2, ID…\n#> $ time    <dbl> 0, 7, 15, 30, 90, 180, 365, 730, 0, 7, 15, 30, 90, 180, 365, 7…\n#> $ sex     <fct> Female, Female, Female, Female, Female, Female, Female, Female…\n#> $ age     <dbl> 35.49993, 35.49993, 35.49993, 35.49993, 35.49993, 35.49993, 35…\n#> $ bmi     <dbl> 20.69408, 20.69408, 20.69408, 20.69408, 20.69408, 20.69408, 20…\n#> $ country <fct> West Africa, West Africa, West Africa, West Africa, West Afric…\n#> $ abelisa <dbl> 1.785124, 4.434471, 4.124822, 4.050954, 3.382073, 2.935390, 2.…\n```\n:::\n\n\nThe tibbles now has factor variables & tidy names. The next chunk is looking at the number of unique values in factor variables (i.e. the support of the categorical variables). @tbl-fcts-unique shows the number of unique values in factor variables.\n\n\n::: {#tbl-fcts-unique .cell layout-align=\"center\" tbl-cap='The corresponding number of levels for the factor variables'}\n\n```{.r .cell-code  code-fold=\"true\"}\n# tb |>\n#   summarise(across(where(is.factor), \\(x) length(unique(x))))\n\ntb |>\n  summarise(across(where(is.factor), n_distinct)) |>\n  knitr::kable(align = \"ccc\")\n```\n\n::: {.cell-output-display}\n\n\n| id | sex | country |\n|:--:|:---:|:-------:|\n| 45 |  2  |    3    |\n\n\n:::\n:::\n\n\nFor the factor variables in the tibble:\n\n-   45 levels for `id` factor variable.\n-   2 levels for `sex` factor variable.\n-   3 levels for `country` factor variable.\n\nThe next subsections are looking at the factor variables. The goal is to have an idea about possible inbalances between levels and to have some visual inspection of their distributions.\n\n## The factor variables\n\n### The `id` variable\n\nThe following chunk is computing the counts and proportions of the `id`'s variable levels.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_id_levels_number <- tb |>\n  summarise(\n    n = n(),\n    .by = id\n  ) |>\n  mutate(\n    prop = n / sum(n),\n  )\n```\n:::\n\n\n@tbl-id-levels-number shows the head of the summarized data, showing the corresponding counts (representing the number of measurements/observations) for each level in the `id` variable and @fig-id-levels-number shows a visualisation of the `id` variable level's counts.\n\n\n::: {#tbl-id-levels-number .cell layout-align=\"center\" tbl-cap='The number of observations for each level corresponding to `id` variable'}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_id_levels_number |>\n  head() |>\n  knitr::kable(align = \"ccc\")\n```\n\n::: {.cell-output-display}\n\n\n| id  | n |   prop    |\n|:---:|:-:|:---------:|\n| ID1 | 8 | 0.0222222 |\n| ID2 | 8 | 0.0222222 |\n| ID3 | 8 | 0.0222222 |\n| ID4 | 8 | 0.0222222 |\n| ID5 | 8 | 0.0222222 |\n| ID6 | 8 | 0.0222222 |\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_id_levels_number |>\n  ggplot(aes(x = id, y = n)) +\n  geom_point(size = 3, color = \"tomato\") +\n  geom_segment(aes(x = id, xend = id, y = 0, yend = n), color = \"tomato\") +\n  labs(\n    title = \"Number of observations of the ID levels\",\n    subtitle = \"Each subject appears with 8 measurements in the data\",\n    x = \"Subject's ID\",\n    y = \"Number of observations\"\n  ) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The number of observations for each level corresponding to `id` variable](ebola_files/figure-html/fig-id-levels-number-1.png){#fig-id-levels-number fig-align='center' width=576}\n:::\n:::\n\n\nIt seems that each `id` level has the same number of counts for each level, i.e. it seems that there are preciselsy $8$ observations for *every* subject in the data set. This can be checked by looking at the complete tibble given its small size but in general it can be checked by computing the number of distinct values in counts variable (`n`) in the summarized data. The following codes does exactly this:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_id_levels_number |>\n  select(n) |>\n  n_distinct() == TRUE\n#> [1] TRUE\n```\n:::\n\n\nThere is only one numerical value (8 in this case) corresponding to the ID counts for each level. Hence, it can be concluded that\n\n::: callout-note\nThe number of observations (measurements) is the same across the subjects (8 observations), i.e. there are no missing or additional measurements for any subject in the data set.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nn_obs_per_subject <- tb_id_levels_number |>\n  pull(n) |>\n  unique()\n# n_obs_per_subject\n```\n:::\n\n\n### The `sex` variable\n\nThe following chunk is looking at the counts and proportion of the `sex`'s variable levels.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_sex_levels_number <- tb |>\n  summarise(\n    n_obs = n(),\n    .by = sex\n  ) |>\n  mutate(\n    n_subjects = n_obs / n_obs_per_subject,\n    prop = n_subjects / sum(n_subjects),\n  )\n```\n:::\n\n\n@tbl-sex_levels_number shows the number of subjects for each `sex`'s variable level and their corresponding proportion in the data set. @fig-sex_levels_number shows a bar plot visualisation of the proportions.\n\n\n::: {#tbl-sex_levels_number .cell layout-align=\"center\" tbl-cap='The number of subjects for each sex level and their corresponding \nproportion in the data set.'}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_sex_levels_number |>\n  knitr::kable(align = \"cccc\")\n```\n\n::: {.cell-output-display}\n\n\n|  sex   | n_obs | n_subjects |   prop    |\n|:------:|:-----:|:----------:|:---------:|\n| Female |  168  |     21     | 0.4666667 |\n|  Male  |  192  |     24     | 0.5333333 |\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb |>\n  ggplot(aes(x = sex, y = after_stat(prop), group = 1)) +\n  geom_bar(fill = \"tomato\") +\n  labs(\n    title = \"Proportion of the sex levels in the data\",\n    x = \"Subject's sex\",\n    y = \"Proportion\"\n  ) +\n  scale_y_continuous(labels = scales::percent) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The proportion of the sex levels in the data.](ebola_files/figure-html/fig-sex_levels_number-1.png){#fig-sex_levels_number fig-align='center' width=576}\n:::\n:::\n\n\nThe counts and proportions for the levels corresponding to the `sex` variable are:\n\n-   \"Female\" level: 21 subjects, representing 0.47% of the data,\n-   \"Male\" level: 24 subjects, representing 0.53% of the data.\n\nHence, it can be concluded that\n\n::: callout-note\nThe data is fairly balanced between the `sex`'s variable levels.\n:::\n\n### The `country` variable\n\nThe following chunk is looking at the counts and proportion of the `country`'s variable levels:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_country_levels_number <- tb |>\n  summarise(\n    n_obs = n(),\n    .by = country\n  ) |>\n  mutate(\n    n_subjects = n_obs / n_obs_per_subject,\n    prop = n_subjects / sum(n_subjects),\n  )\n```\n:::\n\n\n@tbl-country-levels-number shows the number of subjects for each `country`'s variable levels and their corresponding proportion in the data set. @fig-country-levels-number shows a bar plot visualisation of the proportions.\n\n\n::: {#tbl-country-levels-number .cell layout-align=\"center\" tbl-cap='The number of subjects for each country level and their corresponding \nproportion in the data set.'}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_country_levels_number |>\n  knitr::kable(align = \"ccc\")\n```\n\n::: {.cell-output-display}\n\n\n|   country   | n_obs | n_subjects |   prop    |\n|:-----------:|:-----:|:----------:|:---------:|\n| West Africa |  120  |     15     | 0.3333333 |\n| East Africa |  96   |     12     | 0.2666667 |\n|   Europe    |  144  |     18     | 0.4000000 |\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb |>\n  ggplot(aes(x = country,  y = after_stat(prop), group = 1)) +\n  geom_bar(fill = \"tomato\") +\n  labs(\n    title = \"Proportion of the country levels in the data\",\n    x = \"Subjects's country\",\n    y = \"Proportion\"\n  ) +\n  scale_y_continuous(labels = scales::percent) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The proportion of the country levels in the data.](ebola_files/figure-html/fig-country-levels-number-1.png){#fig-country-levels-number fig-align='center' width=576}\n:::\n:::\n\n\nThe counts and proportions for the levels corresponding to the `country` variable are:\n\n-   \"West Africa\" level: 15 observations, representing 0.33% of the data,\n-   \"East Africa\" level: 12 observations, representing 0.27% of the data,\n-   \"Europe\" level: 18 observations, representing 0.4% of the data.\n\n::: callout-note\nThe data is fairly balanced between the country levels.\n:::\n\nThe following chunk is looking at the proportion of the `sex`'s variable levels in each `country`'s variable levels.\n\n@tbl-country-sex-levels-number shows the results & @fig-country-sex-levels-number a bar plot visualisation.\n\n\n::: {#tbl-country-sex-levels-number .cell layout-align=\"center\" tbl-cap='The number of subjects for each sex - country pair corresponding levels\nand their corresponding proportion in the data set.'}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb |>\n  summarise(\n    n_subjects = n() / n_obs_per_subject,\n    .by = c(country, sex)\n  ) |>\n  arrange(country, sex) |>\n  group_by(country) |>\n  mutate(prop_across_regions = n_subjects / sum(n_subjects)) |>\n  ungroup() |>\n  mutate(prop = n_subjects / sum(n_subjects)) |>\n  knitr::kable(align = \"cccccc\")\n```\n\n::: {.cell-output-display}\n\n\n|   country   |  sex   | n_subjects | prop_across_regions |   prop    |\n|:-----------:|:------:|:----------:|:-------------------:|:---------:|\n| West Africa | Female |     9      |      0.6000000      | 0.2000000 |\n| West Africa |  Male  |     6      |      0.4000000      | 0.1333333 |\n| East Africa | Female |     5      |      0.4166667      | 0.1111111 |\n| East Africa |  Male  |     7      |      0.5833333      | 0.1555556 |\n|   Europe    | Female |     7      |      0.3888889      | 0.1555556 |\n|   Europe    |  Male  |     11     |      0.6111111      | 0.2444444 |\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb |>\n  ggplot(aes(x = country, fill = sex)) +\n  geom_bar(position = \"fill\") +\n  labs(\n    title = \"Proportion of sex for each region\",\n    x = \"Patient's country\",\n    y = \"Counts\", \n    fill = NULL\n  ) +\n  scale_y_continuous(labels = scales::percent) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n  ) \n```\n\n::: {.cell-output-display}\n![The proportion of the sex's levels in country's levels](ebola_files/figure-html/fig-country-sex-levels-number-1.png){#fig-country-sex-levels-number fig-align='center' width=576}\n:::\n:::\n\n\n## The numerical variables\n\n### The `time` variable\n\nThe `id` variable analysis showed that for each subject (i.e. for each level of the `id` variable) exactly 8 measurements -- taken at different times -- are available. For the time variable, we check if the corresponding measurement times for each subject are the same (i.e. if for each subject in the data set the 8 measurements are taken at the same time instances). Because of the small size of the data set, we can get and idea if this is true by looking at the plot of measurement times for each ID, @fig-time-measurements. (Plot done using log(times) for a better visualization).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb |>\n  ggplot(aes(x = id, y = log(time))) +\n  geom_point(color = \"tomato\") +\n  labs(\n    title = \"Measurment times\",\n    x = \"Patient's ID\",\n    y = \"Log Time (days)\", \n  ) +\n  scale_y_continuous(breaks = seq(-2, 7, by = 2)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The times of measurements for each subject in the data set.](ebola_files/figure-html/fig-time-measurements-1.png){#fig-time-measurements fig-align='center' width=576}\n:::\n:::\n\n\nThis can be checked rigorously via `pivot_wider`, pivoting the measurement times wider and checking if the value is unique in each time column. The next chunk is doing this.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb |>\n  select(id, time) |>\n  # pivot the tibble wider and get the time measurements \n  pivot_wider(\n    names_from = time,\n    names_prefix = \"t_\",\n    values_from = time\n    ) |>\n  summarise(\n    across(starts_with(\"t_\"), n_distinct)\n  ) |>\n  knitr::kable(align = \"ccccccc\")\n#> Warning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\n#> Use 'xfun::attr2()' instead.\n#> See help(\"Deprecated\")\n#> Warning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\n#> Use 'xfun::attr2()' instead.\n#> See help(\"Deprecated\")\n```\n\n::: {.cell-output-display}\n\n\n| t_0 | t_7 | t_15 | t_30 | t_90 | t_180 | t_365 | t_730 |\n|:---:|:---:|:----:|:----:|:----:|:-----:|:-----:|:-----:|\n|  1  |  1  |  1   |  1   |  1   |   1   |   1   |   1   |\n\n\n:::\n:::\n\n\nHence, it can be concluded that\n\n::: callout-note\nThe corresponding measurement times for each subject are taken the same time instances.\n:::\n\nFor all subjects in the data set, the measurements are taken at 0, 7, 15, 30, 90, 180, 365, 730 days.\n\n### The `age` variable\n\nThe following chunk is computing the density of `age` variable, showed in @fig-age-density.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb |>\n  ggplot(aes(x = age)) +\n  geom_density(color = \"tomato\", fill = \"tomato\", alpha = .5) +\n  labs(\n    title = \"Age density\",\n    x = \"Age (years)\",\n    y = \"Density\"\n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The density of `age` variable.](ebola_files/figure-html/fig-age-density-1.png){#fig-age-density fig-align='center' width=576}\n:::\n:::\n\n\nThe `age` variable seems to contain negative values. The following chunk filters the tibble for negative age values, showed in @tbl-age-negative\n\n\n::: {#tbl-age-negative .cell layout-align=\"center\" tbl-cap='The subjects correponding ID\\'s values for negative age values'}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_negative_age <- tb |>\n  filter(age < 0) |>\n  distinct(id, age)\n\ntb_negative_age |>\n  knitr::kable(align = \"cc\")\n```\n\n::: {.cell-output-display}\n\n\n|  id  |    age     |\n|:----:|:----------:|\n| ID27 | -3.191009  |\n| ID33 | -12.318307 |\n\n\n:::\n:::\n\n\nThere are two subjects with corresponding negative ages:\n\n-   subject ID27 which has the recorded corresponding age -3.19,\n\n-   subject ID33 which has the recorded corresponding age -12.32.\n\n::: callout-important\nThe subjects appearing with negative age in the data are dropped.\n:::\n\nThe following chunks drops the subjects with corresponds negative age.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean <- tb |>\n  filter(age >= 0)\n```\n:::\n\n\nThe conditional distributions of the `age` variable given the `sex` variable's levels are fairly close to each other, @fig-age-cond-density. This is not the case for the conditional distributions of the `age` variable given the `country` variable's levels: the age distribution for subjects from \"West Africa\" is significant different from the age distribution for subjects from \"East Africa\" and \"Europe\". (This is not very significant though, accounting for the small number of subjects, @tbl-country-levels-number.)\n\n\n::: {#fig-age-cond-density .cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  ggplot(aes(x = age, color = sex, fill = sex)) +\n  geom_density(alpha = .5) +\n  labs(\n    title = \"Age densities for sex levels\",\n    x = \"Age (year)\",\n    y = \"Density\",\n    color = NULL,\n    fill = NULL\n  ) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\"\n  ) \n\n\ntb_clean |>\n  ggplot(aes(x = age, color = country, fill = country)) +\n  geom_density(alpha = .5) +\n  labs(\n    title = \"Age densities for region levels\",\n    x = \"Age (years)\",\n    y = \"Density\",\n    color = NULL,\n    fill = NULL\n  ) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\"\n  ) \n```\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-age-cond-density-1.png){#fig-age-cond-density-1 fig-align='center' width=384}\n:::\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-age-cond-density-2.png){#fig-age-cond-density-2 fig-align='center' width=384}\n:::\n\nThe conditional distribution of `age` given `sex` and `country` variables.\n:::\n\n\nIn this case, looking at the median, IQR and range is more sensible. @tbl-age-sex-median and @tbl-age-country-median are showing the min, median, IQR and max for the `age` variable conditional on `sex` and `country` levels, respectively. The corresponding boxplots are showed in @fig-age-sex-country-boxplot.\n\n\n::: {#tbl-age-sex-median .cell layout-align=\"center\" tbl-cap='The min, median, IQR and max for the `age` variable conditional on `sex` variable\\'s levels.'}\n\n```{.r .cell-code  code-fold=\"true\"}\n\ntb_clean |>\n  summarise(\n    min = min(age),\n    median = median(age),\n    IQR = IQR(age), \n    max = max(age),\n    .by = sex\n  ) |>\n  knitr::kable(align = \"ccccc\")\n```\n\n::: {.cell-output-display}\n\n\n|  sex   |   min    |  median  |   IQR    |   max    |\n|:------:|:--------:|:--------:|:--------:|:--------:|\n| Female | 16.95602 | 47.08783 | 23.23231 | 79.14763 |\n|  Male  | 2.96366  | 44.15401 | 30.09295 | 80.64180 |\n\n\n:::\n:::\n\n::: {#tbl-age-country-median .cell layout-align=\"center\" tbl-cap='The min, median, IQR and max for the `age` variable conditional on `country` variable\\'s levels.'}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  summarise(\n    min = min(age),    \n    median = median(age),\n    IQR = IQR(age), \n    max = max(age),\n    .by = country\n  )  |>\n  knitr::kable(align = \"ccccc\")\n```\n\n::: {.cell-output-display}\n\n\n|   country   |   min    |  median  |   IQR    |   max    |\n|:-----------:|:--------:|:--------:|:--------:|:--------:|\n| West Africa | 24.11422 | 39.29298 | 21.17336 | 80.64180 |\n| East Africa | 2.96366  | 50.63353 | 37.34947 | 68.56830 |\n|   Europe    | 16.95602 | 48.08937 | 32.51637 | 79.14763 |\n\n\n:::\n:::\n\n::: {#fig-age-sex-country-boxplot .cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  ggplot(aes(y = age, x = sex, fill = sex)) +\n  geom_boxplot(alpha = .5, show.legend = FALSE) +\n  labs(\n    title = \"Age for sex levels\",\n    x = \"Sex\",\n    y = \"Age (years)\"\n  )  +\n  theme_bw()\n\ntb_clean |>\n  ggplot(aes(y = age, x = country, fill = country)) +\n  geom_boxplot(alpha = .5, show.legend = FALSE) +\n  labs(\n    title = \"Age for region levels\",\n    x = \"Region\",\n    y = \"Age (years)\"\n  )  +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-age-sex-country-boxplot-1.png){#fig-age-sex-country-boxplot-1 fig-align='center' width=384}\n:::\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-age-sex-country-boxplot-2.png){#fig-age-sex-country-boxplot-2 fig-align='center' width=384}\n:::\n\nThe boxplot of `age` variable given `sex` and `country` variables.\n:::\n\n\nAnother thing that should be checked about `age` variable is the following: it seems the variable rather indicates the subject's age at the beginning of the experiment and it *does not* increment during the experiment, i.e. it does not account for the time passed between measurements. This can be checked by looking at the distinct values of `id` and `age` in the data set:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  nrow() / n_obs_per_subject == tb_clean |>\n  distinct(id, age) |>\n  nrow()\n#> [1] TRUE\n```\n:::\n\n\nHence, it can be concluded that\n\n::: callout-important\nThe `age` variable represents the subject's age at the beginning of the experiment and it is not accounting for the time between measurements.\n:::\n\nAnother variable `age_updated` that represents the subject's age at the time of each measurement is added to the tibble in case the analysis requires to take in account the age at the corresponding time instance of the measurement. The next chunk does this.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean <- tb_clean |>\n  mutate(age_updated = age + time / 365) |>\n  relocate(age_updated, .after = age)\n\ntb_clean |>\n  head() |>\n  knitr::kable(align = \"cccccccc\")\n#> Warning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\n#> Use 'xfun::attr2()' instead.\n#> See help(\"Deprecated\")\n#> Warning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\n#> Use 'xfun::attr2()' instead.\n#> See help(\"Deprecated\")\n```\n\n::: {.cell-output-display}\n\n\n| id  | time |  sex   |   age    | age_updated |   bmi    |   country   | abelisa  |\n|:---:|:----:|:------:|:--------:|:-----------:|:--------:|:-----------:|:--------:|\n| ID1 |  0   | Female | 35.49993 |  35.49993   | 20.69408 | West Africa | 1.785124 |\n| ID1 |  7   | Female | 35.49993 |  35.51911   | 20.69408 | West Africa | 4.434470 |\n| ID1 |  15  | Female | 35.49993 |  35.54103   | 20.69408 | West Africa | 4.124822 |\n| ID1 |  30  | Female | 35.49993 |  35.58213   | 20.69408 | West Africa | 4.050954 |\n| ID1 |  90  | Female | 35.49993 |  35.74651   | 20.69408 | West Africa | 3.382073 |\n| ID1 | 180  | Female | 35.49993 |  35.99308   | 20.69408 | West Africa | 2.935390 |\n\n\n:::\n:::\n\n\n### The `bmi` variable\n\nAcounting for the fact that the `age` variable does not represent the age at the time of each measurement but rather the subject's age at the beginning of the experiment, we start by checking if the `bmi` variable has the same interpretation, i.e. if it simply indicates the subject's body mass index at the start of the experiment and it does not capture the subject's BMI variation during the experiment:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  nrow() / n_obs_per_subject == tb_clean |>\n  distinct(id, bmi) |>\n  nrow()\n#> [1] TRUE\n```\n:::\n\n\nHence, it can be concluded that\n\n::: callout-note\nThe `bmi` variable represents the subject's BMI at the beginning of the experiment and it is not accounting for the BMI variations during the experiment.\n:::\n\nAs before, we look at the density of `bmi` variable. The next chunk computes the denisty, showed in @fig-bmi-density.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  ggplot(aes(x = bmi)) +\n  geom_density(color = \"tomato\", fill = \"tomato\", alpha = .5) +\n  labs(\n    title = \"BMI density\",\n    x = \"BMI (kg/m²)\",\n    y = \"Density\"\n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The density of `bmi` variable.](ebola_files/figure-html/fig-bmi-density-1.png){#fig-bmi-density fig-align='center' width=576}\n:::\n:::\n\n\nThe conditional densities and conditional boxplots (conditional on the categorical variables `sex` and `country`) are showed in @fig-bmi-densities-cond and @fig-bmi-boxplots-cond.\n\n\n::: {#fig-bmi-densities-cond .cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\n\n\ntb_clean |>\n  ggplot(aes(x = bmi, color = sex, fill = sex)) +\n  geom_density(alpha = .5) +\n  labs(\n    title = \"BMI densities for sex levels\",\n    x = \"BMI (kg/m²)\",\n    y = \"Density\",\n    color = NULL,\n    fill = NULL\n  ) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\"\n  ) \n\ntb_clean |>\n  ggplot(aes(x = bmi, color = country, fill = country)) +\n  geom_density(alpha = .5) +\n  labs(\n    title = \"BMI densities for region levels\",\n    x = \"BMI (kg/m²)\",\n    y = \"Density\",\n    color = NULL,\n    fill = NULL\n  ) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\"\n  )\n```\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-bmi-densities-cond-1.png){#fig-bmi-densities-cond-1 fig-align='center' width=384}\n:::\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-bmi-densities-cond-2.png){#fig-bmi-densities-cond-2 fig-align='center' width=384}\n:::\n\nThe densities of `bmi` variable given `sex` and `country` variables.\n:::\n\n::: {#fig-bmi-boxplots-cond .cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  ggplot(aes(y = bmi, x = sex, fill = sex)) +\n  geom_boxplot(alpha = .5, show.legend = FALSE) +\n  labs(\n    title = \"BMI for sex levels\",\n    x = \"Sex\",\n    y = \"BMI (kg/m²)\"\n  )  +\n  theme_bw()\n\ntb_clean |>\n  ggplot(aes(y = bmi, x = country, fill = country)) +\n  geom_boxplot(alpha = .5, show.legend = FALSE) +\n  labs(\n    title = \"BMI for region levels\",\n    x = \"Region\",\n    y = \"BMI (kg/m²)\"\n  )  +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-bmi-boxplots-cond-1.png){#fig-bmi-boxplots-cond-1 fig-align='center' width=384}\n:::\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-bmi-boxplots-cond-2.png){#fig-bmi-boxplots-cond-2 fig-align='center' width=384}\n:::\n\nThe boxplots of `bmi` variable given `sex` and `country` variables.\n:::\n\n\n### The `abelisa` variable\n\nAs before, we look at the density of `abelisa` variable. The next chunk computes the denisty, showed in @fig-abelisa-density,\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  ggplot(aes(x = abelisa)) +\n  geom_density(color = \"tomato\", fill = \"tomato\", alpha = .5) +\n  labs(\n    title = \"Antibody concentration density\",\n    x = \"Antibody concentration (EU/mL)\",\n    y = \"Density\"\n  )  +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The density of `abelisa` variable.](ebola_files/figure-html/fig-abelisa-density-1.png){#fig-abelisa-density fig-align='center' width=576}\n:::\n:::\n\n\nthe conditional densities are showed in @fig-abelisa-sex-country-density\n\n\n::: {#fig-abelisa-sex-country-density .cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  ggplot(aes(x = abelisa, color = sex, fill = sex)) +\n  geom_density(alpha = .5) +\n  labs(\n    title = \"Antibody conc. densities for sex levels\",\n    x = \"Antibody conc. (EU/mL)\",\n    y = \"Density\",\n    color = NULL,\n    fill = NULL\n  ) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\"\n  )\n\ntb_clean |>\n  ggplot(aes(x = abelisa, color = country, fill = country)) +\n  geom_density(alpha = .5) +\n  labs(\n    title = \"Antibody conc. densities for region levels\",\n    x = \"Antibody conc. (EU/mL)\",\n    y = \"Density\",\n    color = NULL,\n    fill = NULL\n  ) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\"\n  )\n```\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-abelisa-sex-country-density-1.png){#fig-abelisa-sex-country-density-1 fig-align='center' width=384}\n:::\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-abelisa-sex-country-density-2.png){#fig-abelisa-sex-country-density-2 fig-align='center' width=384}\n:::\n\nThe density of `abelisa` variable given `sex` and `country` variables.\n:::\n\n\nand the conditional boxplots are showed in @fig-abelisa-sex-country-boxplot\n\n\n::: {#fig-abelisa-sex-country-boxplot .cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  ggplot(aes(y = abelisa, x = sex, fill = sex)) +\n  geom_boxplot(alpha = .5, show.legend = FALSE) +\n  labs(\n    title = \"Antibody concentration for sex levels\",\n    x = \"Sex\",\n    y = \"Antibody conc. (EU/mL)\"\n  )  +\n  theme_bw()\n\ntb_clean |>\n  ggplot(aes(y = abelisa, x = country, fill = country)) +\n  geom_boxplot(alpha = .5, show.legend = FALSE) +\n  labs(\n    title = \"Antibody concentration for region levels\",\n    x = \"Region\",\n    y = \"Antibody conc. (EU/mL)\"\n  )  +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-abelisa-sex-country-boxplot-1.png){#fig-abelisa-sex-country-boxplot-1 fig-align='center' width=384}\n:::\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-abelisa-sex-country-boxplot-2.png){#fig-abelisa-sex-country-boxplot-2 fig-align='center' width=384}\n:::\n\nThe boxplot of `abelisa` variable given `sex` and `country` variables.\n:::\n\n\nThe next chunk computes the antibody concentration during time for all subjects in the data frame and it's log version, showed in @fig-abelisa-all.\n\n\n::: {#fig-abelisa-all .cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  ggplot(aes(x = time, y = abelisa, color = bmi, group = id)) +\n  geom_line() +\n  scale_color_distiller(palette = \"RdPu\") +\n  labs(\n    title = \"Antibody concentration during time\",\n    x = \"Time (days)\",\n    y = \"Antibody conc. (EU/mL)\",\n    color = \"BMI\"\n  ) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\"\n  )\n\ntb_clean |>\n  ggplot(aes(x = time, y = log(abelisa), color = bmi, group = id)) +\n  geom_line() +\n  scale_color_distiller(palette = \"RdPu\") +\n  labs(\n    title = \"Antibody concentration during time\",\n    x = \"log(Time) (days)\",\n    y = \"log(Antibody conc.) (EU/mL)\",\n    color = \"BMI\"\n  ) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\"\n  )\n```\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-abelisa-all-1.png){#fig-abelisa-all-1 fig-align='center' width=384}\n:::\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-abelisa-all-2.png){#fig-abelisa-all-2 fig-align='center' width=384}\n:::\n\nThe antibody concentration during time for all subjects. \n\n:::\n\n\nThe next chunk computes the average antibody concentration during time (based on the subjects in the data frame) and it's log version, showed in @fig-abelisa-all-mean.\n\n\n::: {#fig-abelisa-all-mean .cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  summarise(\n    mean_abelisa = mean(abelisa),\n    .by = time\n  ) |>\n  ggplot(aes(x = time, y = mean_abelisa)) +\n  geom_line(color = \"tomato\") +\n  labs(\n    title = \"Average antibody concentration during time\",\n    x = \"Time (days)\",\n    y = \"Antibody conc. (EU/mL)\"\n  ) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\"\n  )\n\ntb_clean |>\n  summarise(\n    mean_abelisa = mean(abelisa),\n    .by = time\n  ) |>\n  ggplot(aes(x = time, y = log(mean_abelisa))) +\n  geom_line(color = \"tomato\") +\n  labs(\n    title = \"Average antibody concentration during time\",\n    x = \"Time (days)\",\n    y = \"Antibody conc. (EU/mL)\"\n  ) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\"\n  )\n```\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-abelisa-all-mean-1.png){#fig-abelisa-all-mean-1 fig-align='center' width=384}\n:::\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-abelisa-all-mean-2.png){#fig-abelisa-all-mean-2 fig-align='center' width=384}\n:::\n\nThe average antibody concentration during time. \n\n:::\n\n\nThe next chunk computes the antibody concentration during time for all subjects, for all levels of `country` and `sex` variables, showed in @fig-abelisa-all-per-levels.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  ggplot(aes(x = time, y = abelisa, color = bmi, group = id)) +\n  geom_line() +\n  facet_grid(sex ~ country) +\n  scale_color_distiller(palette = \"RdPu\") +\n  labs(\n    title = \"Antibody concentration during time\",\n    x = \"Time (days)\",\n    y = \"Antibody conc. (EU/mL)\",\n    color = \"BMI\"\n  ) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\"\n  )\n```\n\n::: {.cell-output-display}\n![The antibody concentration during time for all subjects, for all levels of `country` and `sex` variables](ebola_files/figure-html/fig-abelisa-all-per-levels-1.png){#fig-abelisa-all-per-levels fig-align='center' width=576}\n:::\n:::\n\n\nThe next chunk computes the antibody concentration during time for all subjects, individually, showed in @fig-abelisa-all-per-subject (for clarity, title and axis names are removed).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_clean |>\n  ggplot(aes(x = time, y = abelisa)) +\n  geom_line(color = \"tomato\") +\n  facet_wrap(~ id) +\n  labs(\n    title = NULL,\n    x = NULL,\n    y = NULL\n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The antibody concentration during time for all subjects, for all levels of `country` and `sex` variables\n](ebola_files/figure-html/fig-abelisa-all-per-subject-1.png){#fig-abelisa-all-per-subject fig-align='center' width=1152}\n:::\n:::\n\n\nThe two aspects that are apparent in @fig-abelisa-all, @fig-abelisa-all-per-levels and fig-abelisa-all-per-subject are the following:\n\n-   A similar behavior (pattern) of the concentration levels during time (i.e. a very sudden increase followed by a slow decrease).\n-   Variation in behavior between subjects: the amplitude of the initial spike varies, the rate of decrease varies. This variation is (partially) explained by the subject particular physiology.\n\n## An approximation function\n\nThe goal here is to find the analytical form of a exponential functional that can model the behavior of the antibody concentration during time.\n\nImportantly, the behavior will be considered starting with day 7, which effectively means the exclusion of the the first (time) measurement for each subject in the data frame.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntb_after_7 <- tb_clean |>\n  filter(time != 0)\n```\n:::\n\n\nThe antibody concentration is decreasing exponential and (apparently) platoes the following function is considered to model the antibody concentration:\n\n$$\n\\begin{equation}\nf(t)\n=\n\\phi_1 \n+ \n\\left(\n\\phi_2 - \\phi_1\n\\right) \n\\exp(- \\phi_3 t)\n\\end{equation}\n$$ {#eq-f-approx}\n\nThe parameters are computed in the following chunk:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrange_abelisa_average <- tb_after_7 |>\n  summarise(\n    mean_abelisa = mean(abelisa),\n    .by = time\n  ) |>\n  pull(mean_abelisa) |>\n  range()\nrange_abelisa_average\n#> [1] 2.752019 4.096533\n\nrange_time <- tb_after_7 |>\n  pull(time) |>\n  range()\nrange_time\n#> [1]   7 730\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nf_approx <- function(psi, time){\n  y_min <- psi[1]\n  y_max <- psi[2]\n  rate <- psi[3]\n  return(y_min + (y_max - y_min) * exp(-rate * time)) \n}\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntime <- seq(range_time[1], range_time[2], 1)\n\n#psi_vals <- c(range_abelisa_average[1], range_abelisa_average[2], 0.007)\npsi_vals <- c(range_abelisa_average[1], range_abelisa_average[2], 0.0065)\n\n\ntb_f_approx <- tibble(\n  time  = time,\n  f = f_approx(psi_vals, time)\n)\n\ntb_f_approx\n#> # A tibble: 724 × 2\n#>    time     f\n#>   <dbl> <dbl>\n#> 1     7  4.04\n#> 2     8  4.03\n#> 3     9  4.02\n#> 4    10  4.01\n#> 5    11  4.00\n#> 6    12  4.00\n#> # ℹ 718 more rows\n```\n:::\n\n::: {#fig-abelisa-vs-func-approx .cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_after_7 |>\n  ggplot() +\n  geom_point(aes(x = time, y = abelisa, group = id), color = \"tomato\") +\n  geom_line(\n    aes(x = time, y = f), \n    color = \"darkseagreen\",\n    linewidth = 1.5,\n    data = tb_f_approx\n    ) +\n  labs(\n    title = \"Antibody concentration vs. approx. func.\",\n    x = \"Time (days)\",\n    y = \"Antibody conc. (EU/mL)\",\n    color = \"BMI\"\n  ) +\n  theme_bw()\n\ntb_after_7 |>\n  summarise(\n    mean_abelisa = mean(abelisa),\n    .by = time\n  ) |>\n  ggplot(aes(x = time, y = mean_abelisa)) +\n  geom_point(color = \"tomato\") +\n  geom_line(\n    aes(x = time, y = f), \n    color = \"darkseagreen\",\n    linewidth = 1.5,\n    data = tb_f_approx\n    ) +\n  labs(\n    title = \"Average antibody conc. vs. approx func.\",\n    x = \"Time (days)\",\n    y = \"Antibody conc. (EU/mL)\",\n    color = \"BMI\"\n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-abelisa-vs-func-approx-1.png){#fig-abelisa-vs-func-approx-1 fig-align='center' width=384}\n:::\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/fig-abelisa-vs-func-approx-2.png){#fig-abelisa-vs-func-approx-2 fig-align='center' width=384}\n:::\n\nAntibody concentration vs. approximation function\n\n:::\n\n\n## Non-linear (NL) model\n\nIn the following,\n\n-   $m$ denotes the number of subjects,\n-   $n$ denotes the number of measurements (in this case the concentration measurements) for *each* subject taken at different time instants.\n\nThe measurement corresponding to $i$^th^ patient at the $j$^th^ time instant is denoted by $y_{ij}$, with\n\n-   $i = 1, \\ldots, m$, (in this case $m = 43$, accounting for the removed data with corresponding negative ages)\n-   $j = 1, \\ldots, n$ (in this case $n = 8$).\n\n$y_{ij}$ is viewed as the dependent variable (in this case the `abelisa` variable representing the antibody concentration) of a *non-linear model*, writing\n\n$$\n\\begin{equation}\n\\begin{split}\ny_{ij} \n= \nf(\\psib, t_j) \n+ \n\\epsilon_{ij}\n,\n\\end{split}\n\\end{equation}\n$$ {#eq-nlm}\n\nwhere\n\n-   $f$ represents a non-linear model,\n-   $t_j$ represents the $j$^th^ time instant,\n-   $\\psib$ represents the parameters vector,\n-   $\\epsilon_{ij}$ accounts for the modeling error and uncertainty.\n\n### One subject\n\nBefore considering the model @eq-nlm accounting for all subjects, a single subject is considered. For illustration, @fig-abelisa-one-subject shows the evolution of the antibody concentration during time for subject ID1.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_after_7 |>\n  filter(id == \"ID1\") |>\n  ggplot(aes(x = time, y = abelisa)) +\n  geom_point(color = \"tomato\") + \n  geom_line(\n    aes(x = time, y = f), \n    color = \"darkseagreen\",\n    linewidth = 1.5,\n    data = tb_f_approx\n    ) +\n  labs(\n    title = \"Antibody concentration during time for subject ID1\",\n    x = \"Time (days)\",\n    y = \"Antibody conc. (EU/mL)\"\n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The antibody concentration during time for subject ID1](ebola_files/figure-html/fig-abelisa-one-subject-1.png){#fig-abelisa-one-subject fig-align='center' width=576}\n:::\n:::\n\n\nIn this case, the model writes\n\n$$\n\\begin{equation}\n\\begin{split}\ny_{j} = f(\\psib, t_j) + \\epsilon_j,\n\\end{split}\n\\end{equation}\n$$ {#eq-nlm-one}\n\ni.e. the subject's index $i$ is dropped and the only measurement variation is due to the measurement timing, with the least-squares estimate given by\n\n$$\n\\begin{equation}\n\\begin{split}\n\\widehat{\\psib}\n=\n\\arg\\min_{\\psib}\n\\sum_{j=1}^{n}\n\\left(\ny_j\n-\nf(\\psib, t_j)\n\\right)^2\n\\end{split}\n\\end{equation}\n$$ {#eq-nlm-one-ls}\n\nwith\n\n$$\n\\begin{equation}\n\\begin{split}\n\\psib\n=\n\\begin{bmatrix}\n\\phi_1 & \\phi_2 & \\phi_3\n\\end{bmatrix}\n.\n\\end{split}\n\\end{equation}\n$$ {#eq-param}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nnls_sub_1 <- nls(\n  abelisa ~ f_approx(psi, time),\n  data = tb_after_7 |> filter(id == \"ID1\"),\n  start = list(psi = psi_vals)\n  )\n\nnls_sub_1\n#> Nonlinear regression model\n#>   model: abelisa ~ f_approx(psi, time)\n#>    data: filter(tb_after_7, id == \"ID1\")\n#>     psi1     psi2     psi3 \n#> 2.369908 4.441104 0.007356 \n#>  residual sum-of-squares: 0.03733\n#> \n#> Number of iterations to convergence: 6 \n#> Achieved convergence tolerance: 6.02e-06\n\nbroom::tidy(nls_sub_1) |>\n  knitr::kable(align = \"ccc\")\n```\n\n::: {.cell-output-display}\n\n\n| term | estimate  | std.error | statistic |  p.value  |\n|:----:|:---------:|:---------:|:---------:|:---------:|\n| psi1 | 2.3699077 | 0.0878109 | 26.988771 | 0.0000112 |\n| psi2 | 4.4411042 | 0.0762377 | 58.253396 | 0.0000005 |\n| psi3 | 0.0073556 | 0.0010835 | 6.788539  | 0.0024586 |\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_sub_1_pred <- tb_f_approx |>\n  mutate(\n  prediction = predict(nls_sub_1, newdata = tb_f_approx)  \n  )\ntb_sub_1_pred\n#> # A tibble: 724 × 3\n#>    time     f prediction\n#>   <dbl> <dbl>      <dbl>\n#> 1     7  4.04       4.34\n#> 2     8  4.03       4.32\n#> 3     9  4.02       4.31\n#> 4    10  4.01       4.29\n#> 5    11  4.00       4.28\n#> 6    12  4.00       4.27\n#> # ℹ 718 more rows\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_after_7 |>\n  filter(id == \"ID1\") |>\n  ggplot(aes(x = time, y = abelisa)) +\n  geom_point(color = \"tomato\") +\n  geom_line(\n    aes(x = time, y = f), \n    color = \"darkseagreen\",\n    linewidth = 1.5,\n    data = tb_sub_1_pred\n    ) +\n  geom_line(\n    aes(x = time, y = prediction), \n    color = \"lightblue\",\n    linewidth = 1.5,\n    data = tb_sub_1_pred\n    ) +\n  labs(\n    title = \"Antibody concentration vs. NLM pred\",\n    x = \"Time (days)\",\n    y = \"Antibody conc. (EU/mL)\",\n    color = \"BMI\"\n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The antibody concentration during time for subject ID1 vs. approximation function (green) vs. NLM prediction (blue)](ebola_files/figure-html/fig-abelisa-sub_1-vs-nlm-pred-1.png){#fig-abelisa-sub_1-vs-nlm-pred fig-align='center' width=576}\n:::\n:::\n\n\n### Multiple subjects\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_after_7 |>\n  ggplot(aes(x = time, y = abelisa)) +\n  geom_point(color = \"tomato\") +\n  geom_line(\n    aes(x = time, y = f), \n    color = \"darkseagreen\",\n    linewidth = 1.5,\n    data = tb_f_approx\n    ) +\n  labs(\n    title = \"Antibody concentration during time for all subjects\",\n    x = \"Time (days)\",\n    y = \"Antibody conc. (EU/mL)\"\n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The antibody concentration during time for all subjects vs. approximation function ](ebola_files/figure-html/fig-abelisa-all-subjects-1.png){#fig-abelisa-all-subjects fig-align='center' width=576}\n:::\n:::\n\n\nThe model for multiple subjects is given by @eq-nlm and the LS estimate is given by\n\n$$\n\\begin{equation}\n\\begin{split}\n\\widehat{\\psib}\n=\n\\arg\\min_{\\psib}\n\\sum_{i=1}^{m}\n\\sum_{j=1}^{n}\n\\left(\ny_{ij}\n-\nf(\\psib, t_j)\n\\right)^2\n\\end{split}\n\\end{equation}\n$$ {#eq-nlm-ls}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nnls_sub_all <- nls(\n  abelisa ~ f_approx(psi, time),\n  data = tb_after_7,\n  start = list(psi = psi_vals)\n  )\n\nnls_sub_all\n#> Nonlinear regression model\n#>   model: abelisa ~ f_approx(psi, time)\n#>    data: tb_after_7\n#>     psi1     psi2     psi3 \n#> 2.743720 4.247855 0.009601 \n#>  residual sum-of-squares: 35.42\n#> \n#> Number of iterations to convergence: 4 \n#> Achieved convergence tolerance: 2.578e-06\n\nbroom::tidy(nls_sub_all) |>\n  knitr::kable(align = \"ccc\")\n```\n\n::: {.cell-output-display}\n\n\n| term | estimate  | std.error | statistic | p.value |\n|:----:|:---------:|:---------:|:---------:|:-------:|\n| psi1 | 2.7437203 | 0.0419748 | 65.365923 |    0    |\n| psi2 | 4.2478547 | 0.0451069 | 94.173147 |    0    |\n| psi3 | 0.0096014 | 0.0010454 | 9.184298  |    0    |\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_sub_all_pred <- tb_f_approx |>\n  mutate(\n  prediction = predict(nls_sub_all, newdata = tb_f_approx)  \n  )\n# tb_sub_all_pred\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_after_7 |>\n  ggplot(aes(x = time, y = abelisa)) +\n  geom_point(color = \"tomato\") +\n  geom_line(\n    aes(x = time, y = f), \n    color = \"darkseagreen\",\n    linewidth = 1.5,\n    data = tb_sub_all_pred\n    ) +\n  geom_line(\n    aes(x = time, y = prediction), \n    color = \"lightblue\",\n    linewidth = 1.5,\n    data = tb_sub_all_pred\n    ) +\n  labs(\n    title = \"Antibody concentration vs. NLM pred\",\n    x = \"Time (days)\",\n    y = \"Antibody conc. (EU/mL)\",\n    color = \"BMI\"\n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The antibody concentration during time for all subjects and vs. approximation function (green) vs. NLM prediction (blue)](ebola_files/figure-html/fig-abelisa-all-vs-nlm-pred-1.png){#fig-abelisa-all-vs-nlm-pred fig-align='center' width=576}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_after_7 |>\n  ggplot(aes(x = time, y = abelisa)) +\n  geom_point(color = \"tomato\") +\n  geom_line(\n    aes(x = time, y = prediction), \n    color = \"lightblue\",\n    linewidth = 1.5,\n    data = tb_sub_all_pred\n    ) +\n  labs(\n    title = NULL,\n    x = NULL,\n    y = NULL,\n    color = NULL\n  ) +\n  facet_wrap(~ id) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![The antibody concentration during time for all subjects and the NLM  prediction\n](ebola_files/figure-html/fig-abelisa-all-invidiual-vs-nlm-pred-1.png){#fig-abelisa-all-invidiual-vs-nlm-pred fig-align='center' width=1152}\n:::\n:::\n\n\n### Multiple models fitted on multiple subjects\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nn_subjects <- tb_after_7 |>\n  pull(id) |>\n  n_distinct()\n\navailable_ids_vec <- tb_after_7 |>\n  pull(id) |>\n  unique() |>\n  as.character() |>\n  parse_number()\n\nsub_indiv <- tibble()\n\nset.seed(43)\n\npsi_vals <- c(range_abelisa_average[1], range_abelisa_average[2], 0.0065)\n\nfor(i in available_ids_vec){\n  nls_sub_i <- nls(\n    abelisa ~ f_approx(psi, time),\n    data = tb_after_7 |> filter(id == str_c(\"ID\", i)),\n    start = list(psi = psi_vals)\n    )  \n  \n  tb_sub_i_pred <- tibble(\n    time = time,\n    id = rep(str_c(\"ID\", i), length(time))\n    ) \n  \n  tb_sub_i_pred <- tb_sub_i_pred |>\n    mutate(pred = predict(nls_sub_i, newdata = tb_sub_i_pred))\n  \n  sub_indiv <- bind_rows(sub_indiv, tb_sub_i_pred)\n  }\n\nsub_indiv <- sub_indiv |>\n  relocate(id, .before = time) |>\n  mutate(\n    id = factor(id, ordered = TRUE)\n  )\nsub_indiv\n#> # A tibble: 31,132 × 3\n#>   id     time  pred\n#>   <ord> <dbl> <dbl>\n#> 1 ID1       7  4.34\n#> 2 ID1       8  4.32\n#> 3 ID1       9  4.31\n#> 4 ID1      10  4.29\n#> 5 ID1      11  4.28\n#> 6 ID1      12  4.27\n#> # ℹ 31,126 more rows\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_after_7 |>\n  ggplot() +\n  geom_point(\n    aes(x = time, y = abelisa, group = id),\n    color = \"tomato\",\n    size = 2\n  ) +\n  geom_line(\n    data = sub_indiv,\n    aes(x = time, y = pred, group = id),\n    color = \"darkseagreen\",\n    linewidth = 1\n  ) +\n  labs(\n    title = NULL,\n    x = NULL,\n    y = NULL,\n    color = NULL\n  ) +\n  facet_wrap( ~ id)\n```\n\n::: {.cell-output-display}\n![The antibody concentration during time for all subjects and the NLM individual predictions\n](ebola_files/figure-html/fig-abelisa-all-invidiual-vs-nlm-individual-pred-1.png){#fig-abelisa-all-invidiual-vs-nlm-individual-pred fig-align='center' width=1152}\n:::\n:::\n\n\n## Non-linear mixed effects (NLME) model - no covariates\n\nWill be done via stochastic approximation expectation maximization (SAEM) using the `saemix` package.\n\nFirst thing: account for the specificity of `saemix` which expects the `id` column in the data frame to be of numerical type. The next chunk is re-transforming the `id` column in the tibble into a numerical variable and parse the numerical value (i.e. removes \"ID\" from \"IDi\")\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntb_after_7 <- tb_after_7 |>\n  mutate(\n    id = parse_number(as.character(id))\n    )\ntb_after_7\n#> # A tibble: 301 × 8\n#>      id  time sex      age age_updated   bmi country     abelisa\n#>   <dbl> <dbl> <fct>  <dbl>       <dbl> <dbl> <fct>         <dbl>\n#> 1     1     7 Female  35.5        35.5  20.7 West Africa    4.43\n#> 2     1    15 Female  35.5        35.5  20.7 West Africa    4.12\n#> 3     1    30 Female  35.5        35.6  20.7 West Africa    4.05\n#> 4     1    90 Female  35.5        35.7  20.7 West Africa    3.38\n#> 5     1   180 Female  35.5        36.0  20.7 West Africa    2.94\n#> 6     1   365 Female  35.5        36.5  20.7 West Africa    2.61\n#> # ℹ 295 more rows\n```\n:::\n\n\nThe next chunk is defining the data as a `saemix` object, via `saemixData`. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nsaemix_data_nlme <- saemixData(\n  name.data = tb_after_7,\n  name.group = \"id\",\n  name.predictors = \"time\",\n  name.response = \"abelisa\",\n  units = list(x = \"Days\", y = \"EU/ml\"),\n  automatic = TRUE\n)\n#> \n#> \n#> The following SaemixData object was successfully created:\n#> \n#> Object of class SaemixData\n#>     longitudinal data for use with the SAEM algorithm\n#> Dataset tb_after_7 \n#>     Structured data: abelisa ~ time | id \n#>     Predictor: time (Days)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsaemix_data_nlme\n#> Object of class SaemixData\n#>     longitudinal data for use with the SAEM algorithm\n#> Dataset tb_after_7 \n#>     Structured data: abelisa ~ time | id \n#> 301     observations in 43 subjects\n#> First lines of data:\n#>    id time  abelisa mdv cens occ ytype\n#> 1   1    7 4.434471   0    0   1     1\n#> 2   1   15 4.124822   0    0   1     1\n#> 3   1   30 4.050954   0    0   1     1\n#> 4   1   90 3.382073   0    0   1     1\n#> 5   1  180 2.935390   0    0   1     1\n#> 6   1  365 2.606559   0    0   1     1\n#> 7   1  730 2.308632   0    0   1     1\n#> 8   2    7 3.664922   0    0   1     1\n#> 9   2   15 4.143873   0    0   1     1\n#> 10  2   30 3.967767   0    0   1     1\n```\n:::\n\n\nThe next chunk implements the function from @eq-f-approx:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nfunction_approx <- function(psi, id, xidep){\n  time <- xidep[, 1]\n  y_min <- psi[id, 1]\n  y_max <- psi[id, 2]\n  rate <- psi[id, 3]\n  fpred <- y_min + (y_max - y_min) * exp(-rate * time)\n  return(fpred)\n}\n#function_approx\n```\n:::\n\n\nThe next chunk is defining the nlme model as a `saemix` object, via `saemixModel` function. The model is given by @eq-f-approx, the initial values for $\\phi_1$ and $\\phi_2$ are set via the range computed over the complete data and the rate $r$ is set at $0.05$. The model considers random effects on all three parameters & constant variance, `error.model = \"constant\"`. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nsaemix_model_nlme <- saemixModel(\n  model = function_approx,\n  description = \"Approx function\", \n  psi0 = matrix(\n    c(1.6, 4.9, 0.05),\n    ncol = 3, \n    byrow = TRUE, \n    dimnames = list(NULL, c(\"y_min\", \"y_max\", \"rate\"))),\n  transform.par = c(0, 0, 1),   # log-transform rate only\n  covariance.model = diag(1, 3),  # random effects on all\n  error.model = \"constant\"\n  )\n#> \n#> \n#> The following SaemixModel object was successfully created:\n#> \n#> Nonlinear mixed-effects model\n#>   Model function:  Approx function\n#>   Model type:  structural\n#> function(psi, id, xidep){\n#>   time <- xidep[, 1]\n#>   y_min <- psi[id, 1]\n#>   y_max <- psi[id, 2]\n#>   rate <- psi[id, 3]\n#>   fpred <- y_min + (y_max - y_min) * exp(-rate * time)\n#>   return(fpred)\n#> }\n#>   Nb of parameters: 3 \n#>       parameter names:  y_min y_max rate \n#>       distribution:\n#>      Parameter Distribution Estimated\n#> [1,] y_min     normal       Estimated\n#> [2,] y_max     normal       Estimated\n#> [3,] rate      log-normal   Estimated\n#>   Variance-covariance matrix:\n#>       y_min y_max rate\n#> y_min     1     0    0\n#> y_max     0     1    0\n#> rate      0     0    1\n#>   Error model: constant , initial values: a.1=1 \n#>     No covariate in the model.\n#>     Initial values\n#>              y_min y_max rate\n#> Pop.CondInit   1.6   4.9 0.05\n# saemix_model_nlme\n```\n:::\n\n\nThe next chunk is defining the nlme model's parameters as a (regular R) list:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nsaemix_options_nlme <- list(\n  seed = 42,\n  save = FALSE, \n  save.graph = FALSE,\n  displayProgress = FALSE,\n  print = FALSE\n  )\n#saemix_options_nlme\n```\n:::\n\n\nThe next chunk is fitting the nlme model, a `saemix` object, created via `saemix` function.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nsaemix_fit_nlme <- saemix(\n  saemix_model_nlme,\n  saemix_data_nlme,\n  saemix_options_nlme\n  )\n#> Simulating data using nsim = 1000 simulated datasets\n#> Computing WRES and npde .....\n#> Simulating data using nsim = 1000 simulated datasets\n#> Computing WRES and npde .....\n#> Simulating data using nsim = 1000 simulated datasets\n#> Computing WRES and npde .....\n# saemix_fit_nlme\n```\n:::\n\n\nThe results are\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsaemix_fit_nlme@results\n#> Fixed effects\n#>  Parameter Estimate   SE      CV(%)\n#>  y_min     2.74135  0.050503 1.84  \n#>  y_max     4.24859  0.052600 1.24  \n#>  rate      0.00961  0.000756 7.87  \n#>  a.1       0.25759  0.012961 5.03  \n#> \n#> Variance of random effects\n#>  Parameter    Estimate   SE    CV(%)  \n#>  omega2.y_min 6.85e-02 0.0201     29.3\n#>  omega2.y_max 7.12e-02 0.0221     31.0\n#>  omega2.rate  1.75e-05 0.0408 233084.8\n#> \n#> Statistical criteria\n#> Likelihood computed by linearisation\n#>       -2LL= 150.281 \n#>        AIC= 164.281 \n#>        BIC= 176.6094 \n#> Likelihood computed by importance sampling\n#>       -2LL= 150.0711 \n#>        AIC= 164.0711 \n#>        BIC= 176.3995\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsaemix_fit_nlme@results@fixed.effects\n#> [1] 2.741351986 4.248585754 0.009611671\n```\n:::\n\n\nThe following chunk plots the comparison between the observed and the (individual and population) prediction for subject 1:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nfit_with_preds <- saemix.predict(saemix_fit_nlme)\n#> Simulating data using nsim = 1000 simulated datasets\n#> Computing WRES and npde .....\ntb_data <- fit_with_preds@data@data\ntb_predictions <- fit_with_preds@results@predictions\n\ntb_complete <- cbind(tb_data, tb_predictions)\n\nggplot(subset(tb_complete, id == 1), aes(x = time)) +\n  geom_point(aes(y = abelisa, color = \"Observed\"), size = 2) +\n  geom_line(aes(y = ipred, color = \"Individual prediction\"), linewidth = 1.5) +\n  geom_line(aes(y = ppred, color = \"Population prediction\"), linewidth = 1.5, linetype = \"dashed\") +\n  scale_color_manual(\n    name = NULL,\n    values = c(\n      \"Observed\" = \"tomato\",\n      \"Individual prediction\" = \"darkseagreen\",\n      \"Population prediction\" = \"violet\"\n    )\n  ) +\n  labs(\n    title = str_c(\"Subject\", 1, \": Obs vs. Pred\", sep = \" \"),\n    x = \"Time\",\n    y = \"Antibody levels (EU/ml)\"\n  ) +\n  theme_bw() +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n  )\n```\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/unnamed-chunk-68-1.png){fig-align='center' width=576}\n:::\n:::\n\n\nThe following chunk plots the comparison between the observed and the (individual and population) prediction for the subjects in the data set. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(tb_complete, aes(x = time)) +\n  geom_point(aes(y = abelisa), color = \"tomato\", size = 2) +\n  geom_line(aes(y = ipred), color = \"darkseagreen\", linewidth = 1.5) +\n  geom_line(aes(y = ppred), color = \"violet\", linewidth = 1.5, linetype = \"dashed\") +\n  labs(\n    title = NULL,\n    x = NULL,\n    y = NULL\n  ) +\n  facet_wrap(~ id) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ebola_files/figure-html/unnamed-chunk-69-1.png){fig-align='center' width=1152}\n:::\n:::\n\n::: {#fig-fixed-effects-iterations .cell layout-ncol=\"3\" layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\npsi <- psi(saemix_fit_nlme) |>\n  as_tibble() |>\n  rowid_to_column(\"iteration\")\n\npsi |>\n  ggplot(aes(x = iteration, y = y_min)) +\n  geom_line(color = \"tomato\") +\n  labs(\n    x = \"Iteration\",\n    y = \"y_min\"    \n  ) +\n  theme_bw()\n\npsi |>\n  ggplot(aes(x = iteration, y = y_max)) +\n  geom_line(color = \"tomato\") +\n  labs(\n    x = \"Iteration\",\n    y = \"y_max\"    \n  ) +\n  theme_bw()\n\npsi |>\n  ggplot(aes(x = iteration, y = rate)) +\n  geom_line(color = \"tomato\") +\n  labs(\n    x = \"Iteration\",\n    y = \"rate\"    \n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![y_min](ebola_files/figure-html/fig-fixed-effects-iterations-1.png){#fig-fixed-effects-iterations-1 fig-align='center' width=288}\n:::\n\n::: {.cell-output-display}\n![y_max](ebola_files/figure-html/fig-fixed-effects-iterations-2.png){#fig-fixed-effects-iterations-2 fig-align='center' width=288}\n:::\n\n::: {.cell-output-display}\n![rate](ebola_files/figure-html/fig-fixed-effects-iterations-3.png){#fig-fixed-effects-iterations-3 fig-align='center' width=288}\n:::\n\nFixed effects during iterations\n:::\n\n\n## Non-linear mixed effects (NLME) model - covariates\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nsaemix_data_nlme <- saemixData(\n  name.data = tb_after_7,\n  name.group = \"id\",\n  name.predictors = \"time\",\n  name.response = \"abelisa\",\n  name.covariates = c(\"age\"), # age added as covariate \n  units = list(x = \"Days\", y = \"EU/ml\"),\n  automatic = TRUE\n)\n#> \n#> \n#> The following SaemixData object was successfully created:\n#> \n#> Object of class SaemixData\n#>     longitudinal data for use with the SAEM algorithm\n#> Dataset tb_after_7 \n#>     Structured data: abelisa ~ time | id \n#>     Predictor: time (Days) \n#>     covariates: age (-)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsaemix_data_nlme\n#> Object of class SaemixData\n#>     longitudinal data for use with the SAEM algorithm\n#> Dataset tb_after_7 \n#>     Structured data: abelisa ~ time | id \n#>     covariates: age (-) \n#> 301     observations in 43 subjects\n#> First lines of data:\n#>    id time  abelisa      age mdv cens occ ytype\n#> 1   1    7 4.434471 35.49993   0    0   1     1\n#> 2   1   15 4.124822 35.49993   0    0   1     1\n#> 3   1   30 4.050954 35.49993   0    0   1     1\n#> 4   1   90 3.382073 35.49993   0    0   1     1\n#> 5   1  180 2.935390 35.49993   0    0   1     1\n#> 6   1  365 2.606559 35.49993   0    0   1     1\n#> 7   1  730 2.308632 35.49993   0    0   1     1\n#> 8   2    7 3.664922 41.95419   0    0   1     1\n#> 9   2   15 4.143873 41.95419   0    0   1     1\n#> 10  2   30 3.967767 41.95419   0    0   1     1\n```\n:::\n\n\nThe decay rate $\\phi_3$ is assumed to depend on `age` through a linear relationship on the log scale, i.e. \n\n$$\n\\begin{equation}\n\\log(\\psi^{i}_3)\n=\n\\log(\\psi_3)\n+\n\\beta_{\\text{age}}\n\\left(\n\\text{age}_i\n-\n\\overline{\\text{age}}\n+\n\\nu^{i}\n.\n\\right)\n\\end{equation}\n$${#eq-log-scale-regression-age}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmean_age <- mean(tb_after_7$age, na.rm = TRUE)\n\nfunction_approx_age <- function(psi, id, xidep) {\n  time <- xidep[, 1]\n  covariates <- xidep[, -1, drop = FALSE]\n  \n  y_min <- psi[id, 1]\n  y_max <- psi[id, 2]\n  rate  <- psi[id, 3]\n  beta  <- psi[id, 4]\n  \n  age <- covariates[, \"age\"]\n  rate_i <- rate * exp(beta * (age - mean_age))\n  \n  pred <- y_min + (y_max - y_min) * exp(-rate_i * time)\n  return(pred)\n}\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npsi0_vals <- matrix(\n  c(1.6, 4.9, 0.05, 0.01),\n  nrow = 1,\n  dimnames = list(NULL, c(\"y_min\", \"y_max\", \"rate\", \"beta_age\"))\n)\n\ncovariate_matrix <- matrix(c(\n  0, 0, 1, 0  # only 'rate' affected by age\n), nrow = 4, byrow = TRUE)\n\ncovariance_matrix <- diag(c(1, 1, 1, 0))  # random effects only on first 3\n\nsaemix_model_nlme <- saemixModel(\n  model = function_approx_age,\n  description = \"Nonlinear model with age effect on rate\",\n  psi0 = psi0_vals,\n  transform.par = c(0, 0, 1, 0),\n  covariate.model = covariate_matrix,\n  covariance.model = covariance_matrix,\n  error.model = \"constant\"\n)\n#> Error in dimnames(x) <- dn : \n#>   length of 'dimnames' [2] not equal to array extent\n#> [1] \"Creation of SaemixModel failed\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# saemix_fit_nlme <- saemix(\n#   saemix_model_nlme,\n#   saemix_data_nlme,\n#   saemix_options_nlme\n#   )\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# saemix_fit_nlme@results\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# saemix_fit_nlme@results@fixed.effects\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Fit nonlinear mixed model\n# nlme_sub_all <- nlme(\n#   model = abelisa ~ f_approx_2(y_min, y_max, rate, time),\n#   data = tb_after_7,\n#   fixed = y_min + y_max + rate ~ 1,\n#   random = y_min ~ 1 | id,\n#   start = psi_vals,\n#   control = nlmeControl(msMaxIter = 200)\n#   )\n# \n# nlme_sub_all\n\n\n# nlme_fit <- nlme(\n#   model = y ~ logistic_model(Asym, Rate, xmid, time),\n#   data = data,\n#   fixed = Asym + Rate + xmid ~ 1,\n#   random = Asym + Rate ~ 1 | subject,  # Random effects on Asym and Rate\n#   start = c(Asym = 90, Rate = 0.2, xmid = 4.5),\n#   control = nlmeControl(msMaxIter = 200)\n# )\n# \n# nlme_fit\n\n\n#broom::tidy(nlme_sub_all) |>\n#  knitr::kable(align = \"ccc\")\n```\n:::\n\n\n## The model proposed by [@pasin2019]\n\nThe non-linear model proposed in [@pasin2019] based on three compartments, i.e. the SL cells ($S$), the LL cells ($L$) and the antibodies ($A$) writes\n\n$$\n\\begin{equation}\n\\begin{split}\n\\frac{\\d S}{\\d t} \n&\n= \n-\n\\delta_S S\n,\n\\\\\n\\frac{\\d L}{\\d t} \n&\n= \n-\n\\delta_L L\n, \n\\\\\n\\frac{\\d A}{\\d t} \n&\n= \n\\theta_S S\n+\n\\theta_L L \n-\n\\delta_S A\n,\n\\end{split}\n\\end{equation}\n$${#eq-ode-0}\n\nwith \n\n* $\\delta_S$ representing the decay rate over time of the long-lived (SL) antibody-secreting cells,\n\n* $\\theta_S$ representing the antibodies production rate of SL antibody-secreting cells,\n\n* $\\delta_L$ representing the decay rate over time of the long-lived (LL) antibodies,\n\n* $\\theta_L$ representing the antibodies production rate of LL antibody-secreting cells,\n\n* $\\delta_A$ representing the decay rate of antibodies.\n\nThe equation for the antibodies $A$ is the non-homogeneous linear ordinary differential equation (ODE) given by:\n\n$$\n\\begin{equation}\n\\frac{\\d A}{\\d t} \n= \n\\phi_S \n\\exp{\\left(-\\delta_S t \\right)}\n+ \n\\phi_L \n\\exp{\\left( -\\delta_L t \\right)}\n- \n\\delta_A\nA\n,\n\\end{equation}\n$${#eq-ode-1}\n\nwith \n\n$$\n\\begin{equation}\n\\phi_S = \\theta_S S_0,\n\\quad\nS_0 = S(0)\n,\n\\end{equation}\n$$ {#eq-ode-1a}\n\nand\n$$\n\\begin{equation}\n\\phi_L = \\theta_L L_0,\n\\quad\nL_0 = L(0)\n,\n\\end{equation}\n$$ {#eq-ode-1b}\n\n@eq-ode-1 writes\n\n$$\n\\begin{equation}\n\\frac{\\d A}{\\d t} \n+ \\delta_A A \n= \n\\phi_S \\exp(-\\delta_S t) \n+\n\\phi_L \\exp(-\\delta_L t)\n\\end{equation}\n$${#eq-ode-2}\n\nor equivalently\n\n$$\n\\begin{equation}\n\\frac{\\d A}{\\d t} + P(t) A = Q(t)\n\\end{equation}\n$${#eq-ode-3}\n\nwith:\n\n* $P(t) = \\delta_f$ (i.e. constant),\n* $Q(t) = \\phi_S \\exp(-\\delta_S t) + \\phi_L \\exp(-\\delta_L t)$.\n\nThe homogeneous equation writes\n\n$$\n\\begin{equation}\n\\frac{\\d A}{\\d t} \n+ \n\\delta_A\nA \n= \n0\n,\n\\end{equation}\n$${#eq-ode-4}\n\nwith the solution\n\n$$\n\\begin{equation}\nA_h(t) \n= \nc \n\\exp(-\\delta_A t)\n,\n\\end{equation}\n$${#eq-ode-5}\n\nwith $c$ a constant determined by the initial conditions (i.e $A(0)$). The non-homogeneous part can be solved using an integrating factor. Let the integrating factor be  \n\n$$\n\\begin{equation}\n\\mu(t) \n= \n\\exp{\n\\left(\n\\int \\delta_A \\d t\n\\right) \n}\n= \n\\exp{(\\delta_A t)}\n,\n\\end{equation}\n$${#eq-ode-6}\n\nand multiplying by the integrating factor, @eq-ode-2 writes\n\n$$\n\\begin{equation}\n\\begin{split}\n\\frac{\\d{} }{\\d t} \n\\left( \n\\exp(\\delta_f t) f(t) \n\\right) \n&\n= \n\\phi_S \n\\exp\n\\left( \n(\\delta_A - \\delta_S) t \n\\right) \n\\\\\n&\n+ \n\\phi_L \n\\exp\n\\left(\n(\\delta_A - \\delta_L) t \n\\right)\n.\n\\end{split}\n\\end{equation}\n$${#eq-ode-7}\n\nIntegrating both sides (with respect to $t$) writes:\n\n$$\n\\begin{equation}\n\\begin{split}\n\\exp(\\delta_A t) f(t) \n&\n= \n\\phi_S\n\\int \n\\exp{\n\\left( (\\delta_A - \\delta_S) t \\right)\n} \n\\d t\n\\\\\n&\n+ \n\\phi_L\n\\int \n\\exp{\n\\left( (\\delta_A - \\delta_L) t \\right)\n} \n\\d t\n.\n\\end{split}\n\\end{equation}\n$${#eq-ode-8}\n\nThe first integral writes\n\n$$\n\\begin{equation}\n\\int \n\\exp\n\\left( \n(\\delta_A - \\delta_S) \nt \n\\right) \n\\d t \n= \n\\frac{1}{\\delta_A - \\delta_S} \n\\exp\n\\left(\n(\\delta_A - \\delta_S) \nt \n\\right)\n+ \nc_1\n,\n\\end{equation}\n$$ {#eq-ode-9}\n\nand the second integral writes\n\n$$\n\\begin{equation}\n\\int \n\\exp\n\\left( \n(\\delta_A - \\delta_L) \nt \n\\right) \n\\d t \n= \n\\frac{1}{\\delta_A - \\delta_L}\n\\exp\n\\left(\n(\\delta_A - \\delta_L) \nt \n\\right)\n+ \nc_2\n.\n\\end{equation}\n$${#eq-ode-10}\n\nPlugging @eq-ode-9 and @eq-ode-10 in @eq-ode-8 writes\n\n$$\n\\begin{equation}\n\\begin{split}\n\\exp(\\delta_A t) f(t) \n&\n= \n\\frac{\\phi_S}{\\delta_A - \\delta_S} \n\\exp\n\\left(\n(\\delta_A - \\delta_S) \nt \n\\right)\n\\\\\n&\n+ \n\\frac{\\phi_L}{\\delta_A - \\delta_L}\n\\exp\n\\left(\n(\\delta_A - \\delta_L) \nt \n\\right)\n\\\\\n&\n+\nc\n.\n\\end{split}\n\\end{equation}\n$${#eq-ode-11}\n\nhence\n\n$$\n\\begin{equation}\n\\begin{split}\nA(t) \n&\n= \nc \n\\exp(-\\delta_A t) \n\\\\\n&\n+ \n\\frac{\\phi_S}{\\delta_A - \\delta_S} \n\\exp \\left( -\\delta_S t \\right) \n\\\\\n&\n+ \n\\frac{\\phi_L}{\\delta_A - \\delta_L}\n\\exp \\left( -\\delta_L t \\right)\n,\n\\end{split}\n\\end{equation}\n$$ {#eq-ode-12}\n\nwith $c$ a constant determined by the initial condition (i.e. $A(0)$) plugged-in from the data, i.e. the `abelisa` value corresponding to the second time instance measurement (i.e. the 7 days corresponding measurement). Assuming the second time instance measurement is $A(0) = a$, the constant writes\n\n$$\n\\begin{equation}\nc \n=\na \n- \n\\frac{\\phi_S}{\\delta_A - \\delta_S} \n-\n\\frac{\\phi_L}{\\delta_A - \\delta_L}\n.\n\\end{equation}\n$${#eq-ode-13}\n\nLet $\\psib$ denote the vector of parameters for the decay rates (LL antibodies, SL antibodies and antibodies) and $\\phi_S$ and $\\phi_L$\n\n$$\n\\begin{equation}\n\\psib =\n\\begin{bmatrix}\n\\phi_S & \\delta_S & \\phi_L & \\delta_L & \\delta_{Ab} \n\\end{bmatrix}\n.\n\\end{equation}\n$$ {#eq-param-vec}\n\nThe following mixed-effect model each parameter $\\xi_{k}$, with $k = 1, \\ldots, 5$ is considered:\n\n$$\n\\begin{equation}\n\\log{\\left( \\xi_{k}^{i} \\right)}\n=\n\\log{\\left( \\xi_{k0} \\right)} \n+\n\\betab^{T}_{k}\n\\zrvb_{k}^{i}\n+\n\\nu_{k}^{i}\n,\n\\end{equation}\n$$ {#eq-nlme-model}\n\nwhere\n\n* $\\xi^{i}_{k}$ represents the $k$^th^ parameters corresponding to the $i$^th^ subject,\n\n* $\\xi_{k0}$ represents the *fixed effect* corresponding to the $k$^th^ element of the parameters vector,\n\n* $\\zrvb^{i}_{k}$ represents the vector of independent variables of the model,\n\n* $\\betab_{k}$ represents the coefficents corresponding to $\\zrv^{i}_{k}$,\n\n* $\\nu^{i}_{k}$ represents the *individual effect*, assumed to \n\n  * follow a centered normal distributed with variance $\\omega_{k}^{2}$ \n\n  $$\n  \\begin{equation}\n  \\nu^{i}_{k}\n  \\sim\n  \\Normal{0, \\omega_{k}^{2}}\n  \\end{equation}\n  $$  {#eq-nlme-model-1}\n  \n  * be mutually independent\n  \n  $$\n  \\begin{equation}\n  \\nu^{i}_{k} \\indep \\nu^{j}_{l}\n  \\end{equation}\n  $$ {#eq-nlme-model-2}\n\n\nThe antibody concentration for patient $i$ at the $j$th time instance measurement is assumed to be an additional error model\n\n$$\n\\begin{equation}\n\\yrv_{ij}\n=\n\\log_{10}\n\\left(\nA(\\psib^{i},t_{ij})\n\\right)\n+\n\\epsilon_{ij}\n,\n\\end{equation}\n$$ {#eq-nlme-model-3}\n\nwith the noise following a centered normal distributed with the same variance $\\omega_{A}^{2}$ (homoscedasticity), i.e.\n\n$$\n\\begin{equation}\n\\epsilon_{ij}\n\\sim\n\\Normal{0, \\sigma_{A}^{2}}\n.\n\\end{equation}\n$$ {#eq-nlme-model-4}\n\nThe complete set of model's parameters is \n\n$$\n\\begin{equation}\n\\thetab\n=\n\\begin{bmatrix}\n\\left( \\xi_{k0} \\right)_{k = 1, 5}\n&\n\\left( \\betab_{k} \\right)_{k = 1, 5}\n&\n\\left( \\omega_{k} \\right)_{k = 1, 5}\n&\n\\sigma_{A}\n\\end{bmatrix}\n\\end{equation}\n$$ {#eq-nlme-model-5}\n\nCentering the age in the data:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntb_clean_centered <- tb_clean |>\n  mutate(age_centered = age - mean(age)) |>\n  relocate(age_centered, .after = age) |>\n  select(-c(age, age_updated))\n\n# tb_clean_grouped <- groupedData(\n#   abelisa ~ time | id, \n#   data = tb_clean_centered\n#   )\n\n\ntb_after_7_centered <- tb_after_7 |>\n  mutate(age_centered = age - mean(age)) |>\n  relocate(age_centered, .after = age) |>\n  select(-c(age, age_updated))\n\n# tb_after_7_grouped <- groupedData(\n#   abelisa ~ time | id, \n#   data = tb_after_7_centered\n#   )\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# # consntat corresponding to intial values\n# c_const <- 100\n# \n# # Nonlinear function with log-parameters and fixed c\n# f_model_log <- function(time, log_phi_S, log_phi_L, log_delta_A, log_delta_S, log_delta_L) {\n#   phi_S <- exp(log_phi_S)\n#   phi_L <- exp(log_phi_L)\n#   delta_A <- exp(log_delta_A)\n#   delta_S <- exp(log_delta_S)\n#   delta_L <- exp(log_delta_L)\n# \n#   c_const * exp(-delta_A * time) +\n#     (phi_S / (delta_A - delta_S)) * exp(-delta_S * time) +\n#     (phi_L / (delta_A - delta_L)) * exp(-delta_L * time)\n# }\n# \n# # Starting values (log-scale for parameters)\n# start_vals <- c(\n#   log_phi_S = log(50),\n#   log_phi_L = log(30),\n#   log_delta_A = log(0.0005),\n#   log_delta_S = log(0.005),\n#   log_delta_L = log(0.001)\n# )\n# \n# # Fit nlme model:\n# nlme_model <- nlme(\n#   abelisa ~ f_model_log(time, log_phi_S, log_phi_L, log_delta_A, log_delta_S, log_delta_L),\n#   \n#   # Data: \n#   data = tb_after_7_centered,\n# \n#   # Fixed effects:\n#   fixed = list(\n#     log_phi_S ~ sex + age_centered + bmi + country,\n#     log_phi_L ~ sex + age_centered + bmi + country,\n#     log_delta_A ~ sex + age_centered + bmi + country,\n#     log_delta_S + log_delta_L ~ 1  # no covariates on delta S and L params\n#   ),\n# \n#   # Random effects on log_phi_S, log_phi_L, per subject\n#   random = pdDiag(log_phi_S + log_phi_L ~ 1 | id),\n# \n#   start = start_vals,\n# \n#   control = nlmeControl(\n#     pnlsTol = 0.1, \n#     msMaxIter = 100, \n#     msMaxEval = 1000\n#   )\n# )\n# \n# summary(nlme_model)\n```\n:::\n",
    "supporting": [
      "ebola_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}